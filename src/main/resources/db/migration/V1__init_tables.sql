CREATE TABLE public.access_logs (
    id integer NOT NULL,
    action_type character varying(255),
    created_at timestamp(6) with time zone,
    ip_address character varying(255),
    updated_at timestamp(6) with time zone,
    user_agent character varying(255),
    document_id integer,
    user_id integer,
    CONSTRAINT access_logs_action_type_check CHECK (((action_type)::text = ANY ((ARRAY['VIEW'::character varying, 'DOWNLOAD'::character varying, 'UPLOAD'::character varying, 'UPDATE'::character varying, 'DELETE'::character varying, 'SHARE'::character varying])::text[])))
);
ALTER TABLE public.access_logs OWNER TO postgres;
ALTER TABLE public.access_logs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.access_logs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.document_shares (
    id integer NOT NULL,
    created_at timestamp(6) with time zone,
    share_type character varying(255),
    updated_at timestamp(6) with time zone,
    created_by integer,
    document_id integer,
    group_id integer,
    updated_by integer,
    user_id integer,
    CONSTRAINT document_shares_share_type_check CHECK (((share_type)::text = ANY ((ARRAY['VIEW'::character varying, 'EDIT'::character varying])::text[])))
);
ALTER TABLE public.document_shares OWNER TO postgres;
ALTER TABLE public.document_shares ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.document_shares_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.document_tag_assignments (
    document_id integer NOT NULL,
    document_tag_id integer NOT NULL
);
ALTER TABLE public.document_tag_assignments OWNER TO postgres;

CREATE TABLE public.document_tags (
    id integer NOT NULL,
    color character varying(255),
    created_at timestamp(6) with time zone,
    name character varying(255),
    updated_at timestamp(6) with time zone,
    created_by integer,
    updated_by integer
);
ALTER TABLE public.document_tags OWNER TO postgres;
ALTER TABLE public.document_tags ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.document_tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.document_versions (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    created_at timestamp(6) with time zone,
    file_hash character varying(255) NOT NULL,
    file_path character varying(255) NOT NULL,
    file_size double precision NOT NULL,
    mime_type character varying(255) NOT NULL,
    stored_filename character varying(255) NOT NULL,
    updated_at timestamp(6) with time zone,
    version_number integer NOT NULL,
    document_id integer
);
ALTER TABLE public.document_versions OWNER TO postgres;
ALTER TABLE public.document_versions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.document_versions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.documents (
    id integer NOT NULL,
    created_at timestamp(6) with time zone,
    description character varying(255),
    extracted_text character varying(255),
    file_hash character varying(255) NOT NULL,
    file_path character varying(255) NOT NULL,
    file_size double precision NOT NULL,
    is_deleted boolean,
    is_encrypted boolean,
    mime_type character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    original_filename character varying(255) NOT NULL,
    storage_type character varying(255),
    stored_filename character varying(255) NOT NULL,
    updated_at timestamp(6) with time zone,
    created_by integer,
    folder_id integer,
    updated_by integer,
    CONSTRAINT documents_storage_type_check CHECK (((storage_type)::text = ANY ((ARRAY['LOCAL'::character varying, 'AWS_S3'::character varying, 'GCS'::character varying])::text[])))
);
ALTER TABLE public.documents OWNER TO postgres;
ALTER TABLE public.documents ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.documents_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.folder_shares (
    id integer NOT NULL,
    created_at timestamp(6) with time zone,
    share_type character varying(255),
    updated_at timestamp(6) with time zone,
    created_by integer,
    folder_id integer,
    group_id integer,
    updated_by integer,
    user_id integer,
    CONSTRAINT folder_shares_share_type_check CHECK (((share_type)::text = ANY ((ARRAY['VIEW'::character varying, 'EDIT'::character varying])::text[])))
);
ALTER TABLE public.folder_shares OWNER TO postgres;
ALTER TABLE public.folder_shares ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.folder_shares_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.folders (
    id integer NOT NULL,
    created_at timestamp(6) with time zone,
    inherit_permissions boolean,
    is_deleted boolean,
    name character varying(255) NOT NULL,
    updated_at timestamp(6) with time zone,
    created_by integer,
    parent_id integer,
    updated_by integer
);
ALTER TABLE public.folders OWNER TO postgres;
ALTER TABLE public.folders ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.folders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.otp_codes (
    id integer NOT NULL,
    code character varying(255) NOT NULL,
    created_at timestamp(6) with time zone,
    expire_at timestamp(6) with time zone,
    is_used boolean,
    updated_at timestamp(6) with time zone,
    user_id integer
);
ALTER TABLE public.otp_codes OWNER TO postgres;
ALTER TABLE public.otp_codes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.otp_codes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.permissions (
    id integer NOT NULL,
    api_path character varying(255) NOT NULL,
    created_at timestamp(6) with time zone,
    method character varying(255) NOT NULL,
    module character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    updated_at timestamp(6) with time zone
);
ALTER TABLE public.permissions OWNER TO postgres;
ALTER TABLE public.permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.role_permission (
    role_id integer NOT NULL,
    permission_id integer NOT NULL
);
ALTER TABLE public.role_permission OWNER TO postgres;

CREATE TABLE public.roles (
    id integer NOT NULL,
    created_at timestamp(6) with time zone,
    description character varying(255),
    name character varying(255) NOT NULL,
    updated_at timestamp(6) with time zone
);
ALTER TABLE public.roles OWNER TO postgres;
ALTER TABLE public.roles ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.system_settings (
    id integer NOT NULL,
    created_at timestamp(6) with time zone,
    description character varying(255),
    key character varying(255) NOT NULL,
    updated_at timestamp(6) with time zone,
    value character varying(255) NOT NULL,
    created_by integer,
    updated_by integer
);
ALTER TABLE public.system_settings OWNER TO postgres;
ALTER TABLE public.system_settings ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.system_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


CREATE TABLE public.user_group_members (
    id integer NOT NULL,
    role character varying(255),
    group_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT user_group_members_role_check CHECK (((role)::text = ANY ((ARRAY['ADMIN'::character varying, 'MEMBER'::character varying])::text[])))
);
ALTER TABLE public.user_group_members OWNER TO postgres;
ALTER TABLE public.user_group_members ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_group_members_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.user_groups (
    id integer NOT NULL,
    created_at timestamp(6) with time zone,
    description character varying(255),
    name character varying(255) NOT NULL,
    updated_at timestamp(6) with time zone,
    created_by integer,
    updated_by integer
);
ALTER TABLE public.user_groups OWNER TO postgres;
ALTER TABLE public.user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.users (
    id integer NOT NULL,
    avatar character varying(255),
    created_at timestamp(6) with time zone,
    email character varying(255) NOT NULL,
    first_name character varying(255) NOT NULL,
    is_active boolean,
    last_name character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    two_factor_enabled boolean,
    two_factor_secret character varying(255),
    updated_at timestamp(6) with time zone,
    role_id integer NOT NULL
);
ALTER TABLE public.users OWNER TO postgres;
ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);