CREATE EXTENSION IF NOT EXISTS vector;

CREATE TABLE public.document_search_index (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    keywords TEXT,
    keywords_tsv tsvector,
    content_vector vector(384),
    document_id integer,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    CONSTRAINT fk_document_search_index_document FOREIGN KEY (document_id) REFERENCES public.documents(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Indexes
CREATE INDEX IF NOT EXISTS idx_content_vector_vector
    ON document_search_index
    USING ivfflat (content_vector vector_cosine_ops);

CREATE INDEX IF NOT EXISTS idx_keywords_tsv
    ON document_search_index
    USING GIN (keywords_tsv);

-- Function
CREATE OR REPLACE FUNCTION update_keywords_tsv() RETURNS trigger AS $$
BEGIN
  NEW.keywords_tsv := to_tsvector('simple', COALESCE(NEW.keywords, ''));
  RETURN NEW;
END
$$ LANGUAGE plpgsql;

-- Trigger
DROP TRIGGER IF EXISTS trg_keywords_tsv ON document_search_index;

CREATE TRIGGER trg_keywords_tsv
BEFORE INSERT OR UPDATE ON document_search_index
FOR EACH ROW EXECUTE FUNCTION update_keywords_tsv();
